name: Deploy app to ubuntu server

on:
  push:
    branches: [ test-ec2-deploy ]

jobs:

  UseLatestIntegrationTest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Latest Integration Test
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.HOSTNAME  }}
          USER_NAME: ${{ secrets.USER_NAME  }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            cd /home/ubuntu/cloudwatch-agent-integ-tests &&
            git checkout master &&
            git fetch --all &&
            git reset --hard origin/master &&
            git pull origin master
          '

  BuildOnEnv:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build on ec2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOSTNAME : ${{ secrets.HOSTNAME  }}
          USER_NAME : ${{ secrets.USER_NAME  }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            cd /home/ubuntu/amazon-cloudwatch-agent &&
            git checkout master &&
            git fetch --all &&
            git reset --hard origin/master &&
            git pull origin master &&
            make clean build package-deb
          '
  AddLocalStackKeys:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Add Local Stack Keys on EC2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.HOSTNAME  }}
          USER_NAME: ${{ secrets.USER_NAME  }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            cd /home/ubuntu/localstack &&
            git checkout with-local-stack-conf &&
            git fetch --all &&
            git reset --hard origin/with-local-stack-conf &&
            git pull origin with-local-stack-conf &&
            cd ls_tmp &&
            openssl req -new -x509 -newkey rsa:2048 -sha256 -nodes -out snakeoil.pem -keyout snakeoil.key -config snakeoil.conf &&
            cat snakeoil.key snakeoil.pem > server.test.pem &&
            cat snakeoil.key > server.test.pem.key &&
            cat snakeoil.pem > server.test.pem.crt &&
            cat snakeoil.pem > server.test.pem.crt &&
            cat /etc/ssl/certs/ca-certificates.crt > original.pem &&
            cat original.pem snakeoil.pem > combine.pem
          '

  StartLocalStack:
    needs: [AddLocalStackKeys]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Start Local Stack on EC2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.HOSTNAME  }}
          USER_NAME: ${{ secrets.USER_NAME  }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            cd /home/ubuntu/localstack &&
            docker-compose up -d --force-recreate
          '

  InstallAgent:
    needs: [BuildOnEnv, StartLocalStack]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install agent on ec2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.HOSTNAME  }}
          USER_NAME: ${{ secrets.USER_NAME  }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            cd /home/ubuntu/amazon-cloudwatch-agent/build/bin/linux/amd64 &&
            sudo dpkg -i -E ./amazon-cloudwatch-agent.deb
          '
  RunIntegrationTest:
    needs: [InstallAgent, UseLatestIntegrationTest]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Run Integration Test
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.HOSTNAME  }}
          USER_NAME: ${{ secrets.USER_NAME  }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            cd /home/ubuntu/cloudwatch-agent-integ-tests &&
            #Require super user to run tests since file configuration require sudo user
            sudo bash &&
            ./gradlew test -i -Dtest.profile=integration
          '